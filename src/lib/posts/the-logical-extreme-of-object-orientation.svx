---
title: The Logical Extreme of Object Orientation
date: "2020-12-17T00:00:00.000Z"
draft: true
slug: "the-logical-extreme-of-object-orientation"
category: "Software Design"
tags: ["Object orientation", "Programing paradigms"]
description: "Humans have only been speaking computer for less than a century, and we're still trying to figure out how
to communicate properly. See what happens when certain dialects become just a little too dominant."
socialImage: "/media/elegant-objects.png"
---

As you might be able to tell, I'm passionate about software design.

To say that learning how to program has been formative for me would be an understatement. If I had to forget every
language I've ever learned except one, I would unlearn English and keep C++.

Like all languages, programming is organized into prose and poetry. There's plenty of room on that spectrum for some
opinionated organization of ideas.
As [stated](https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book-Z-H-7.html) by Gerald Jay Sussman: "
Thus, programs must be written for people to read, and only incidentally for machines to execute."

Unfortunately, just like spoken language, sometimes the words of others can offend us. We may disagree on phrasing,
structure, or even just denounce the message itself.

I myself have some preferences when it comes to how I write code. These preferences are called programming paradigms. I
myself am a fan of the [functional programming paradigm](https://en.wikipedia.org/wiki/Functional_programming)
and [return-early / guard pattern](https://deviq.com/guard-clause/). Maybe someday I can write articles discussing just
these concepts at length.

Today however, we will perform a case study of a very unique, relatively unheard of paradigm.

![elegant objects homepage](/media/elegant-objects.png)

[Elegant Objects](https://www.elegantobjects.org/#principles) is the paradigm
of [object-oriented programming](https://en.wikipedia.org/wiki/Object-oriented_programming) turned into a philosophy and
taken to its logical conclusion.

One thing I will say before I begin is that they definitely did an excellent job of documenting, explaining, and
justifying the individual philosophies that make up the paradigm. If nothing else, Elegant Objects might be the most
well-documented programming paradigm ever published.

Let us dive into this documentation to learn more, shall we?

Firstly, some of these individual philosophies are definitely something I agree with strongly. 